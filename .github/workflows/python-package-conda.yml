name: GitHub Profile Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 scripts/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 scripts/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test Python scripts
      run: |
        # Test that our scripts can import without errors
        python -c "import sys; sys.path.append('scripts'); import dynamic_stats; print('✅ dynamic_stats.py imports successfully')"
        python -c "import sys; sys.path.append('scripts'); import update_readme; print('✅ update_readme.py imports successfully')"
        
    - name: Validate SVG files
      run: |
        # Check that SVG files are valid XML
        python -c "
        import xml.etree.ElementTree as ET
        import os
        svg_dir = 'assets/svg'
        if os.path.exists(svg_dir):
            for file in os.listdir(svg_dir):
                if file.endswith('.svg'):
                    try:
                        ET.parse(os.path.join(svg_dir, file))
                        print(f'✅ {file} is valid SVG')
                    except ET.ParseError as e:
                        print(f'❌ {file} has XML errors: {e}')
                        exit(1)
        else:
            print('⚠️ No SVG directory found')
        "
        
    - name: Run tests with pytest
      run: |
        # Run our test suite
        python -m pytest tests/ -v --tb=short || echo "⚠️ Tests completed with issues"
